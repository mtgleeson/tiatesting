plugins {
    id 'java'
    id 'signing'
    id 'maven-publish'
}

// Use the build script defined in buildSrc
apply from: rootProject.file('buildSrc/shared.gradle')

dependencies {
    implementation project(':tia-core')
    implementation group: 'org.junit.jupiter', name:'junit-jupiter-engine', version: junit5EngineVersion
    implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
}

Map <String, ?> attrs = [ 'Premain-Class': 'org.tiatesting.agent.Agent',
                          'Can-Redefine-Classes': true,
                          'Can-Retransform-Classes': true,
                          'Agent-Class': 'org.tiatesting.agent.Agent']

tasks.register('uberJarAgent', Jar) {
    archiveClassifier = 'uber'

    from sourceSets.main.output
    //exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'

    manifest {
        attributes attrs
    }

    archiveClassifier = 'runtime'

    dependsOn configurations.runtimeClasspath
    from (configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }){
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'tia-junit5-agent'
            artifact uberJarAgent

            pom {
                name = 'Tia JUnit5 Agent'
                description = 'This library contains the agent used for Tia with JUnit5.'
            }
        }
    }
}